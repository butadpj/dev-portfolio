---
export interface Props {
  title: string;
  description?: string;
  ogMeta?: {
    title: string;
    url?: string;
    image?: string;
  };
}

const {
  title = "butadpj - Coding, Coffee, & Fitness üíª‚òïÔ∏èüí™",
  description = "I'm Paul, a Filipino software developer. I love solving people's problems with the help of my own unique experiences.",
  ogMeta = {
    title: "Solving people's problems through my own unique experiences.",
    url: "https://dev.butadpj.com/",
    image: "/assets/meta-img.png",
  },
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={ogMeta.url} />
    <meta property="og:title" content={ogMeta.title || title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogMeta.image} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={ogMeta.url} />
    <meta property="twitter:title" content={ogMeta.title || title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={ogMeta.image} />

    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="font-mitr">
    <slot />
    <!-- Swiper JS -->
    <script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
  </body>
</html>
<style is:global>
  @import url("https://fonts.googleapis.com/css2?family=K2D:ital,wght@0,400;0,500;0,600;0,700;1,400;1,500;1,600;1,700&family=Mitr:wght@400;500;600;700&display=swap");

  :root {
    --dark: #121213;
    --light: #eef3ff;
    --accent: #ee6807;
    --primaryDark: #144ad6;
    --primary: #5081ff;

    --foreground: var(--dark);
    --background: var(--light);
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    scroll-behavior: smooth;
  }

  @media (prefers-color-scheme: dark) {
    :root {
      --dark: #121213;
      --light: #eef3ff;
      --accent: #ee6807;
      --primaryDark: #144ad6;
      --primary: #5081ff;

      --foreground: var(--light);
      --background: var(--dark);
    }
  }

  body {
    color: var(--foreground);
    background: var(--background);
  }

  h1,
  h2,
  h3,
  h4 {
    font-weight: 500;
  }

  span {
    color: var(--primaryDark);
  }

  code {
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      Liberation Mono,
      DejaVu Sans Mono,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace;
  }

  .glassmorphism {
    /* From https://css.glass */
    background: rgba(238, 243, 255, 0.2);
    box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(5px);
    -webkit-backdrop-filter: blur(5px);
  }

  .glassmorphism-primary {
    background: rgba(20, 75, 215, 0.8);
    /* border-radius: 16px; */
    box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(5px);
    -webkit-backdrop-filter: blur(5px);
  }

  .text-shadow-sm {
    text-shadow: 0px 2px 0px var(--accent);
  }

  .text-shadow {
    text-shadow: 0px 4px 0px var(--accent);
  }

  .hoverable {
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .hoverable:hover {
    filter: brightness(85%);
  }

  /* Toggle class */
  .navbar.hide {
    transform: translateY(-20vh);
  }

  .navbar-content.show {
    transform: translateX(0vw);
    /* touch-action: none; */
  }

  .navbar-logo.hide {
    opacity: 0;
  }

  .no-highlight {
    -webkit-tap-highlight-color: transparent;
    -webkit-touch-callout: none;
  }
  .no-highlight:focus {
    outline: none !important;
  }

  ::selection {
    color: var(--light);
    background: var(--primaryDark);
  }

  .wave {
    animation-name: wave-animation; /* Refers to the name of your @keyframes element below */
    animation-duration: 2.5s; /* Change to speed up or slow down */
    animation-iteration-count: infinite; /* Never stop waving :) */
    transform-origin: 70% 70%; /* Pivot around the bottom-left palm */
    display: inline-block;
  }

  @keyframes wave-animation {
    0% {
      transform: rotate(0deg);
    }
    10% {
      transform: rotate(40deg);
    } /* The following five values can be played with to make the waving more or less extreme */
    20% {
      transform: rotate(-15deg);
    }
    30% {
      transform: rotate(30deg);
    }
    40% {
      transform: rotate(-10deg);
    }
    50% {
      transform: rotate(15deg);
    }
    60% {
      transform: rotate(0deg);
    } /* Reset for the last half to pause */
    100% {
      transform: rotate(0deg);
    }
  }
</style>
